Time Complexity: O(N * logN), For sorting.
Auxiliary Space: O(1) as it is using constant extra space



static boolean areAnagram(char[] str1, char str2[]){
int n1= str1.length;
int n2 = str2.length;

//check if both string length is not equal so obviously not anagram of each other
if(n1!=n2){
return false;
}
// Sort both strings
        Arrays.sort(str1);
        Arrays.sort(str2);

  for(int i=0;i<n1;i++){
  if(str1[i]!=st2[j]){
   return false;

  }
return true;
  }

//driver code
public static void (String args[]){
char str1[]={'g', 'r', 'a', 'm'};
char str2[]={'a', 'r', 'm'};

if (areAnagram(str1, str2))
            System.out.println("The two strings are"
                               + " anagram of each other");
        else
            System.out.println("The two strings are not"
                               + " anagram of each other");



}
}
